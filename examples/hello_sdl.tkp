# Basic framebuffer rendering example using an auxilliary SDL interface

text header
  TACTYK Example - Framebuffer rendering with SDL

text footer
  Done.

const newline 10
const width 640
const height 480

struct sdl_state
  8 mpos_x
  8 mpos_y
  8 key
  1 closing
  1 mousemoved
  6 unused
  8 padding

MAIN:
  bind addr1 header
  assign b 0
  
  PRINT_HEADER_CHAR:
  load byte a addr1 b
  ccall printchar
  add b 1
  if b < header_size PRINT_HEADER_CHAR
  
  assign a newline
  ccall printchar

  # obtain an SDL-backed framebuffer
  tcall sdl--init
  
  assign a width
  assign b height
  tcall sdl--new
  
  tcall sdl--get-eventview
  bind addr3 addr1
  tcall sdl--get-framebuffer
  bind addr4 addr1
  
  # result
  # a = buffer width
  # b = buffer height

  assign b a
  tcall sdl--render
  
  # iterate each visible pixel in the frame buffer
  assign f 0
  sub f 1
  ROW:
    add f 1
    if f == height UPDATE_FB
    assign e 0
    sub e 1
    COL:
      add e 1
      if e == width ROW
      
      # obtain the framebuffer offset of the 1st byte of the pixel (red channel)
      assign d f
      mul d b
      add d e
      mul d 4

      # horizontal red gradient
      assign a e
      mul a 256
      div a width
      store byte addr4 d a

      # offset of 2nd byte (green channel)
      add d 1

      # vertical green gradient
      assign a f
      mul a 256
      div a height
      store byte addr4 d a
  
      goto COL
  UPDATE_FB:
  tcall sdl--upload-framebuffer
  tcall sdl--render
  
  # show it for 1.5 seconds, then exit.
  assign a 1500
  ccall sleep  
  
  # close the SDL window and clean up
  tcall sdl--release
  tcall sdl--quit
  
  bind addr1 footer
  assign b 0
  
  PRINT_FOOTER_CHAR:
  load byte a addr1 b
  ccall printchar
  add b 1
  if b < footer_size PRINT_FOOTER_CHAR

  assign a newline
  ccall printchar

  exit



