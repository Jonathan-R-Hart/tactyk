typespec word-index
  select-operand
    case byte.0
      $WORD_INDEX 0
      pick Wib
    case byte.1
      $WORD_INDEX 1
      pick Wib
    case byte.2
      $WORD_INDEX 2
      pick Wib
    case byte.3
      $WORD_INDEX 3
      pick Wib
    case byte.4
      $WORD_INDEX 4
      pick Wib
    case byte.5
      $WORD_INDEX 5
      pick Wib
    case byte.6
      $WORD_INDEX 6
      pick Wib
    case byte.7
      $WORD_INDEX 7
      pick Wib
    case byte.8
      $WORD_INDEX 8
      pick Wib
    case byte.9
      $WORD_INDEX 9
      pick Wib
    case byte.10
      $WORD_INDEX 10
      pick Wib
    case byte.11
      $WORD_INDEX 11
      pick Wib
    case byte.12
      $WORD_INDEX 12
      pick Wib
    case byte.13
      $WORD_INDEX 13
      pick Wib
    case byte.14
      $WORD_INDEX 14
      pick Wib
    case byte.15
      $WORD_INDEX 15
      pick Wib
    
    case word.0
      $WORD_INDEX 0
      pick Wiw
    case word.1
      $WORD_INDEX 1
      pick Wiw
    case word.2
      $WORD_INDEX 2
      pick Wiw
    case word.3
      $WORD_INDEX 3
      pick Wiw
    case word.4
      $WORD_INDEX 4
      pick Wiw
    case word.5
      $WORD_INDEX 5
      pick Wiw
    case word.6
      $WORD_INDEX 6
      pick Wiw
    case word.7
      $WORD_INDEX 7
      pick Wiw
    
    # for 32-bit fields, the "insertps" instruction is used, so export appropriate transfer specifiers
    case dword.0
      $WORD_INDEX 0
      $WORD_INDEX_alt_ins 0
      $WORD_INDEX_alt_ext 14
      pick Wid
    case dword.1
      $WORD_INDEX 1
      $WORD_INDEX_alt_ins 16
      $WORD_INDEX_alt_ext 78
      pick Wid
    case dword.2
      $WORD_INDEX 2
      $WORD_INDEX_alt_ins 32
      $WORD_INDEX_alt_ext 142
      pick Wid
    case dword.3
      $WORD_INDEX 3
      $WORD_INDEX_alt_ins 48
      $WORD_INDEX_alt_ext 206
      pick Wid
    
    case qword.0
      $WORD_INDEX 0
      pick Wiq
    case qword.1
      $WORD_INDEX 1
      pick Wiq

typespec ssimd-quantity
  select-operand
    case 1
      $QTY 1
      pick Sqty

instruction insert
  operand
    type xmmx
    $DEST $VALUE
  operand
    type word-index
  operand
    type xmmx data integer const float fconst
    $SRC $VALUE
    scramble rTEMPA $LD_A_IMMEDIATE
  select-template
    case XWibD
      code
        pinsrb $DEST, %[$SRC]_32, $WORD_INDEX
    case XWibI XWibC
      code
        $LD_A_IMMEDIATE
        pinsrb $DEST, rTEMPA_32, $WORD_INDEX
        xor rTEMPA, rTEMPA
    case XWiwD
      code
        pinsrw $DEST, %[$SRC]_32, $WORD_INDEX
    case XWiwI XWiwC
      code
        $LD_A_IMMEDIATE
        pinsrw $DEST, rTEMPA_32, $WORD_INDEX
        xor rTEMPA, rTEMPA
    case XWidD
      code
        pinsrd $DEST, %[$SRC]_32, $WORD_INDEX
    case XWidI XWidC
      code
        $LD_A_IMMEDIATE
        pinsrd $DEST, rTEMPA_32, $WORD_INDEX
        xor rTEMPA, rTEMPA
    case XWiqD
      code
        pinsrq $DEST, %[$SRC], $WORD_INDEX
    case XWiqI XWiqC XWiqF XWiqCf
      code
        $LD_A_IMMEDIATE
        pinsrq $DEST, rTEMPA, $WORD_INDEX
        xor rTEMPA, rTEMPA
    
    case XWidX
      code
        cvtsd2ss xTEMPA, $SRC
        insertps $DEST, xTEMPA, $WORD_INDEX_alt_ins
        xor rTEMPA, rTEMPA
        pxor xTEMPA, xTEMPA
    case XWidF XWidCf
      code
        $LD_A_IMMEDIATE
        movq xTEMPA, rTEMPA
        cvtsd2ss xTEMPB, xTEMPA
        insertps $DEST, xTEMPB, $WORD_INDEX_alt_ins
        xor rTEMPA, rTEMPA
        pxor xTEMPA, xTEMPA
        pxor xTEMPB, xTEMPB
    
    case XWiqX
      code
        movq rTEMPA, $SRC
        pinsrq $DEST, rTEMPA, $WORD_INDEX
        xor rTEMPA, rTEMPA
  code
    jmp $NEXT_INSTRUCTION

instruction extract
  operand
    type xmmx data
    $DEST $VALUE
  operand
    type xmmx
    $SRC $VALUE
  operand
    type word-index
  select-template
    case DXWib
      code
        pextrb $DEST, $SRC, $WORD_INDEX
    case DXWiw
      code
        pextrw $DEST, $SRC, $WORD_INDEX
    case DXWid
      code
        pextrd %[$DEST]_32, $SRC, $WORD_INDEX
    case DXWiq
      code
        pextrq $DEST, $SRC, $WORD_INDEX
    case DXWiw
      code
        pextrw $DEST, $SRC, $WORD_INDEX
    
    case XXWid
      code
        insertps xTEMPA, $SRC, $WORD_INDEX_alt_ext
        pxor $DEST, $DEST
        cvtss2sd $DEST, xTEMPA
        pxor xTEMPA, xTEMPA
    case XXWiq
      code
        pextrq rTEMPA, $SRC, $WORD_INDEX
        movq $DEST, rTEMPA
        xor rTEMPA, rTEMPA
        #
        # insertps $DEST, xTEMPB, $WORD_INDEX_alt
  code
    jmp $NEXT_INSTRUCTION

typespec quantity.1-4
  select-operand
    case 1
      $QTY 1
    case 2
      $QTY 2
    case 3
      $QTY 3
    case 4
      $QTY 4

instruction pack-float32
  $QTY 4
  opt-operand
    type quantity.1-4
  operand
    type xmmx
    $DEST $VALUE
  operand
    type xmmx
    $SRC $VALUE
  code
    pxor $DEST, $DEST
  vcode $QTY
    1 cvtsd2ss $DEST, $SRC~0
    2 cvtsd2ss xTEMPA, $SRC~1
    2 insertps $DEST, xTEMPA, 16
    3 cvtsd2ss xTEMPA, $SRC~2
    3 insertps $DEST, xTEMPA, 32
    4 cvtsd2ss xTEMPA, $SRC~3
    4 insertps $DEST, xTEMPA, 48
  code
    pxor xTEMPA, xTEMPA
    jmp $NEXT_INSTRUCTION

instruction pack-int32
  $QTY 4
  opt-operand
    type quantity.1-4
  operand
    type xmmx
    $DEST $VALUE
  operand
    type xmmx
    $SRC $VALUE
  vcode $QTY
    1 insertps xTEMPB, $SRC~0, 0
    2 insertps xTEMPB, $SRC~1, 16
    3 insertps xTEMPB, $SRC~2, 32
    4 insertps xTEMPB, $SRC~3, 48
  code
    movdqa $DEST, xTEMPB
    pxor xTEMPB, xTEMPB
    jmp $NEXT_INSTRUCTION

instruction unpack-float32
  $QTY 4
  opt-operand
    type quantity.1-4
  operand
    type xmmx
    $DEST $VALUE
  operand
    type xmmx
    $SRC $VALUE
  vcode $QTY
    1 insertps xTEMPA, $SRC, 14
    1 pxor $DEST~0, $DEST~0
    1 cvtss2sd $DEST~0, xTEMPA
    2 insertps xTEMPA, $SRC, 78
    2 pxor $DEST~1, $DEST~1
    2 cvtss2sd $DEST~1, xTEMPA
    3 insertps xTEMPA, $SRC, 142
    3 pxor $DEST~2, $DEST~2
    3 cvtss2sd $DEST~2, xTEMPA
    4 insertps xTEMPA, $SRC, 206
    4 pxor $DEST~3, $DEST~3
    4 cvtss2sd $DEST~3, xTEMPA
  code
    pxor xTEMPA, xTEMPA
    pxor xTEMPB, xTEMPB
    jmp $NEXT_INSTRUCTION

instruction unpack-int32
  $QTY 4
  opt-operand
    type quantity.1-4
  operand
    type xmmx
    $DEST $VALUE
  operand
    type xmmx
    $SRC $VALUE
  vcode $QTY
    1 insertps $DEST~0, $SRC, 14
    2 insertps $DEST~1, $SRC, 78
    3 insertps $DEST~2, $SRC, 142
    4 insertps $DEST~3, $SRC, 206
  code
    pxor xTEMPB, xTEMPB
    jmp $NEXT_INSTRUCTION


