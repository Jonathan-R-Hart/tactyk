typespec word-index
  select-operand
    case byte.0
      $WORD_INDEX 0
      pick Wib
    case byte.1
      $WORD_INDEX 1
      pick Wib
    case byte.2
      $WORD_INDEX 2
      pick Wib
    case byte.3
      $WORD_INDEX 3
      pick Wib
    case byte.4
      $WORD_INDEX 4
      pick Wib
    case byte.5
      $WORD_INDEX 5
      pick Wib
    case byte.6
      $WORD_INDEX 6
      pick Wib
    case byte.7
      $WORD_INDEX 7
      pick Wib
    case byte.8
      $WORD_INDEX 8
      pick Wib
    case byte.9
      $WORD_INDEX 9
      pick Wib
    case byte.10
      $WORD_INDEX 10
      pick Wib
    case byte.11
      $WORD_INDEX 11
      pick Wib
    case byte.12
      $WORD_INDEX 12
      pick Wib
    case byte.13
      $WORD_INDEX 13
      pick Wib
    case byte.14
      $WORD_INDEX 14
      pick Wib
    case byte.15
      $WORD_INDEX 15
      pick Wib
    
    case word.0
      $WORD_INDEX 0
      pick Wiw
    case word.1
      $WORD_INDEX 1
      pick Wiw
    case word.2
      $WORD_INDEX 2
      pick Wiw
    case word.3
      $WORD_INDEX 3
      pick Wiw
    case word.4
      $WORD_INDEX 4
      pick Wiw
    case word.5
      $WORD_INDEX 5
      pick Wiw
    case word.6
      $WORD_INDEX 6
      pick Wiw
    case word.7
      $WORD_INDEX 7
      pick Wiw
    
    # for 32-bit fields, the "insertps" instruction is used, so export appropriate transfer specifiers
    case dword.0
      $WORD_INDEX 0
      $WORD_INDEX_alt_ins 0
      $WORD_INDEX_alt_ext 14
      pick Wid
    case dword.1
      $WORD_INDEX 1
      $WORD_INDEX_alt_ins 16
      $WORD_INDEX_alt_ext 78
      pick Wid
    case dword.2
      $WORD_INDEX 2
      $WORD_INDEX_alt_ins 32
      $WORD_INDEX_alt_ext 142
      pick Wid
    case dword.3
      $WORD_INDEX 3
      $WORD_INDEX_alt_ins 48
      $WORD_INDEX_alt_ext 206
      pick Wid
    
    case qword.0
      $WORD_INDEX 0
      pick Wiq
    case qword.1
      $WORD_INDEX 1
      pick Wiq

typespec ssimd-quantity
  select-operand
    case 1
      $QTY 1
      pick Sqty

instruction insert
  operand
    type xmmx
    $DEST $VALUE
  operand
    type word-index
  operand
    type xmmx data integer const float fconst
    $SRC $VALUE
    scramble rTEMPA $LD_A_IMMEDIATE
  select-template
    case XWibD
      code
        pinsrb $DEST, %[$SRC]_32, $WORD_INDEX
    case XWibI XWibC
      code
        $LD_A_IMMEDIATE
        pinsrb $DEST, rTEMPA_32, $WORD_INDEX
        xor rTEMPA, rTEMPA
    case XWiwD
      code
        pinsrw $DEST, %[$SRC]_32, $WORD_INDEX
    case XWiwI XWiwC
      code
        $LD_A_IMMEDIATE
        pinsrw $DEST, rTEMPA_32, $WORD_INDEX
        xor rTEMPA, rTEMPA
    case XWidD
      code
        pinsrd $DEST, %[$SRC]_32, $WORD_INDEX
    case XWidI XWidC
      code
        $LD_A_IMMEDIATE
        pinsrd $DEST, rTEMPA_32, $WORD_INDEX
        xor rTEMPA, rTEMPA
    case XWiqD
      code
        pinsrq $DEST, %[$SRC], $WORD_INDEX
    case XWiqI XWiqC XWiqF XWiqCf
      code
        $LD_A_IMMEDIATE
        pinsrq $DEST, rTEMPA, $WORD_INDEX
        xor rTEMPA, rTEMPA
    
    case XWidX
      code
        cvtsd2ss xTEMPA, $SRC
        insertps $DEST, xTEMPA, $WORD_INDEX_alt_ins
        xor rTEMPA, rTEMPA
        pxor xTEMPA, xTEMPA
    case XWidF XWidCf
      code
        $LD_A_IMMEDIATE
        movq xTEMPA, rTEMPA
        cvtsd2ss xTEMPB, xTEMPA
        insertps $DEST, xTEMPB, $WORD_INDEX_alt_ins
        xor rTEMPA, rTEMPA
    
    case XWiqX
      code
        movq rTEMPA, $SRC
        pinsrq $DEST, rTEMPA, $WORD_INDEX
        xor rTEMPA, rTEMPA
  code
    jmp $NEXT_INSTRUCTION

instruction extract
  operand
    type xmmx data
    $DEST $VALUE
  operand
    type xmmx
    $SRC $VALUE
  operand
    type word-index
  select-template
    case DXWib
      code
        pextrb $DEST, $SRC, $WORD_INDEX
    case DXWiw
      code
        pextrd $DEST, $SRC, $WORD_INDEX
    case DXWiq
      code
        pextrq $DEST, $SRC, $WORD_INDEX
    case DXWiw
      code
        pextrw $DEST, $SRC, $WORD_INDEX
    
    case XXWid
      code
        insertps $DEST, $SRC, $WORD_INDEX_alt_ext
    case XXWiq
      code
        pextrq rTEMPA, $SRC, $WORD_INDEX
        movq $DEST, rTEMPA
        xor rTEMPA, rTEMPA
        #
        # insertps $DEST, xTEMPB, $WORD_INDEX_alt
  code
    jmp $NEXT_INSTRUCTION


