# TEST:  xcompute
# 
# This test consists of a series of simple data transfers, followed by a nonsensical computation which yuses all the arithmetic operators.
# Due to imprecise sse2 floating point arithmetic, it also accumulates a large floating point error.
#   (Probably should consider either rewriting it to use the x87 fpu or writing a variant which uses the x87 fpu)
#
# Virtual-ISA: tactyk_core
# Templates:  
#   xcompute xmmx-*[xcompute-op xmmf32 xmmf64 xmmx data float fconst integer const]
#   xcompute xmmx-[f32]-[index]-*[xcompute-op xmmf32 xmmf64 xmmx data float fconst integer const]
#   xcompute xmmx-[f64]-[index]-*[xcompute-op xmmf32 xmmf64 xmmx data float fconst integer const]
#   

PROGRAM
  const C10000 10000
  const C20000 20000
  const C30000 30000
  const C40000 40000
  const C50000 50000

  const Cf100000.1 100000.1
  const Cf200000.2 200000.2
  const Cf300000.3 300000.3
  const Cf400000.4 400000.4
  const Cf500000.5 500000.5
  
  INIT:
    xassign xA 1.1 2.2 3.3 4.4
    xassign xB 10.1 20.2 30.4 40.4
    xassign xC 100.1 200.2
    xassign xD 1000.1 2000.2
    assign rA 1000
    spread xE 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0
    exit

  XCOMP_xmmx:
    xcompute xE 121
    xcompute xF C50000
    xcompute xG Cf200000.2
    xcompute xH xE
    xcompute xI xA.f32.2
    xcompute xJ xC.f64.1
    xcompute xK xD.f64.0
    
    # 1 - (1000 / ((2000/2 + 10000 + 9.3 + 500000.5 - 100.1 - 1.1) * 3.3))
    # Should evaluate to approximmately 0.9994068796
    xcompute xL 2000 div 2 add C10000 9.3 Cf500000.5 sub xC.f64.0 xA.f32.1 mul xA.f32.2 ~div rA ~sub 1
    exit

  XCOMP_xmmf32:
    assign xN 121
    xcompute xE float32 0 121
    xcompute xF float32 1 C50000
    xcompute xG float32 2 Cf200000.2
    xcompute xH float32 3 xN
    xcompute xI float32 0 xA.f32.2
    xcompute xJ float32 1 xC.f64.1
    xcompute xK float32 2 xD.f64.0
    xcompute xL float32 3 2000 div 2 add C10000 9.3 Cf500000.5 sub xC.f64.0 xA.f32.1 mul xA.f32.2 ~div rA ~sub 1
    exit

  XCOMP_xmmf64:
    assign xN 121
    xcompute xE float64 0 121
    xcompute xF float64 1 C50000
    xcompute xG float64 0 Cf200000.2
    xcompute xH float64 1 xN
    xcompute xI float64 0 xA.f32.2
    xcompute xJ float64 1 xC.f64.1
    xcompute xK float64 0 xD.f64.0
    xcompute xL float64 1 2000 div 2 add C10000 9.3 Cf500000.5 sub xC.f64.0 xA.f32.1 mul xA.f32.2 ~div rA ~sub 1
    exit

XMM-DISPLAYMODE float64
EXEC INIT
TEST
  rA 1000
  xA float32 1.1 2.2 3.3 4.4
  xB float32 10.1 20.2 30.4 40.4
  xC float64 100.1 200.2
  xD float64 1000.1 2000.2

EXEC XCOMP_xmmx
TEST
  xE 121
  xF 50000
  xG 200000.2
  xH 121
  xI float32+ 3.3
  xJ 200.2
  xK 1000.1
  xL float32+ 0.9994068796
  
EXEC INIT
EXEC XCOMP_xmmf32
TEST
  xN 121
  xE float32 121 0 0 0
  xF float32 0 50000 0 0
  xG float32 0 0 200000.2 0
  xH float32 0 0 0 121
  xI float32 3.3 0 0 0
  xJ float32 0 200.2 0 0
  xK float32 0 0 1000.1 0
  xL float32 0 0 0 0.9994068796

EXEC INIT
EXEC XCOMP_xmmf64
TEST
  xN 121
  xE 121 0
  xF 0 50000
  xG 200000.2 0
  xH 0 121
  xI float32+ 3.3 0
  xJ 0 200.2
  xK 1000.1 0
  xL float32+ 0 0.9994068796
