# TEST:  xadd
#
# SUPER-simd addition, scalar 64-bit float target
#
# Virtual-ISA: tactyk_core
# Templates:
#   xadd xmmx-float       (XF XCf)
#   xadd xmmx-integer     (XI XC)
#   xadd xmmx-data        (XD)
#   xadd xmmx-xmmx        (XX)
#   xadd xmmx-xmmx[f32]   (XXF32)
#   xadd xmmx-xmmx[f64]   (XXF64)
#   xadd xmmx-xmmx[v]     (XXv)
#   xadd xmmx-xmmx[vf32]  (XXvF32)
#   xadd xmmx-xmmx[vf64]  (XXvF64)
#
# TARGETS:
# X:     64-bit float
# XF32:  packed 32-bit floats
# XF64:  packed 64-bit floats
# Xv:    vector 64-bit float
# XvF32: vector packed 32-bit floats
# XvF64: vector packed 64-bit floats
#
# case VX*F VX*Cf
# case VX*I VX*C
# case VX*D
# case VX*X
# case VX*XF32
# case VX*XF64
# case VX*Xv
# case VX*XvF32
# case VX*XvF64
## case VX*I8
## case VX*I16
## case VX*I32
## case VX*I64

XMM-DISPLAYMODE float64
PROGRAM
  
  const C0 0
  const C1 1
  const C2 2
  const C3 3
  const C4 4
  const C5 5
  const C6 6
  const C7 7
  const Cf0.1 0.1
  const Cf1.1 1.1
  const Cf2.1 2.1
  const Cf3.1 3.1
  const Cf4.1 4.1
  const Cf5.1 5.1
  const Cf6.1 6.1
  const Cf7.1 7.1
  
  INIT:
    spread xA 1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0 9.0 10.0 11.0 12.0 13.0 14.0
    exit
  *F:
    xadd 1 xvA 0.1
    xadd 2 xvB 0.25
    xadd 3 xvD 0.333
    xadd 4 xvG Cf7.1
    xadd 3 xvK Cf5.1
    exit
  
  *I:
    xadd 6 xvK 100
    xadd 8 xvC C4
    exit
  
  *D:
    spread rA 1 2 3 4 5 6
    xadd 5 xvA rA
    xadd 3 xvE rB
    xadd 9 xvH rC
    xadd 2 xvN rD
    exit
  
  *X:
    xadd 1 xvB xC
    xadd 7 xvC xJ
    xadd 4 xvJ xN
    xadd 2 xvN xB
    exit
    
  *XF32:
    xassign xA 0.01 0.1  10.0  100.0
    xassign xB 0.02 0.2  20.0  200.0
    xassign xC 0.03 0.3  30.0  300.0
    xassign xD 0.04 0.4  40.0  400.0
    xassign xE 0.05 0.5  50.0  500.0
    xassign xF 0.06 0.6  60.0  600.0
    xassign xG 0.07 0.7  70.0  700.0
    xadd 3 xvH xA float32
    xadd 4 xvJ xF float32
    xadd 1 xvN xC float32
    exit
  
  *XF64:
    xassign xA 0.01 0.1
    xassign xB 0.02 0.2
    xassign xC 0.03 0.3
    xassign xD 0.04 0.4
    xassign xE 0.05 0.5
    xassign xF 0.06 0.6
    xassign xG 0.07 0.7
    xadd 3 xvH xA float64
    xadd 4 xvJ xF float64
    xadd 1 xvN xC float64
    exit
    
  *Xv:
    xadd 2 xvA xvC
    xadd 4 xvC xvG
    xadd 6 xvG xvM
    xadd 2 xvM xvA
    exit
  
  *XvF32:
    xassign xA 0.01 0.1  10.0  100.0
    xassign xB 0.02 0.2  20.0  200.0
    xassign xC 0.03 0.3  30.0  300.0
    xassign xD 0.04 0.4  40.0  400.0
    xassign xE 0.05 0.5  50.0  500.0
    xassign xF 0.06 0.6  60.0  600.0
    xassign xG 0.07 0.7  70.0  700.0
    xadd 3 xvH xvA float32
    xadd 4 xvJ xvB float32
    xadd 1 xvN xvC float32
    exit
    
  *XvF64:
    xassign xA 0.01 0.1
    xassign xB 0.02 0.2
    xassign xC 0.03 0.3
    xassign xD 0.04 0.4
    xassign xE 0.05 0.5
    xassign xF 0.06 0.6
    xassign xG 0.07 0.7
    xadd 3 xvH xvA float64
    xadd 4 xvJ xvB float64
    xadd 1 xvN xvC float64
    exit

# xA 1
# xB 2
# xC 3
# xD 4
# xE 5
# xF 6
# xG 7
# xH 8
# xI 9
# xJ 10
# xK 11
# xL 12
# xM 13
# xN 14

EXEC INIT
EXEC *F
TEST
  xA 1.1
  xB 2.25
  xC 3.25
  xD 4.333
  xE 5.333
  xF 6.333
  xG 14.1
  xH 15.1
  xI 16.1
  xJ 17.1
  xK 16.1
  xL 17.1
  xM 18.1
  xN 14

EXEC INIT
EXEC *I
TEST
  xA 101
  xB 102
  xC 7
  xD 8
  xE 9
  xF 10
  xG 11
  xH 12
  xI 13
  xJ 14
  xK 111
  xL 112
  xM 113
  xN 114

EXEC INIT
EXEC *D
TEST
  rA 1
  rB 2
  rC 3
  rD 4
  rE 5
  rF 6
  
  xA 9
  xB 6
  xC 4
  xD 5
  xE 8
  xF 8
  xG 9
  xH 11
  xI 12
  xJ 13
  xK 14
  xL 15
  xM 16
  xN 21

EXEC INIT
EXEC *X
TEST
  xA 6
  xB 5
  xC 13
  xD 14
  xE 15
  xF 16
  xG 17
  xH 18
  xI 19
  xJ 24
  xK 25
  xL 26
  xM 27
  xN 19

EXEC INIT
EXEC *XF32
TEST
  xA float32 0.01 0.1  10.0  100.0
  xB float32 0.02 0.2  20.0  200.0
  xC float32 0.03 0.3  30.0  300.0
  xD float32 0.04 0.4  40.0  400.0
  xE float32 0.05 0.5  50.0  500.0
  xF float32 0.06 0.6  60.0  600.0
  xG float32 0.07 0.7  70.0  700.0
  xH float32+ 8.01
  xI float32+ 9.01
  xJ float32+ 10.07
  xK float32+ 11.06
  xL float32+ 12.06
  xM float32+ 13.06
  xN float32+ 14.03

EXEC INIT
EXEC *XF64
TEST
  xA float64 0.01 0.1
  xB float64 0.02 0.2
  xC float64 0.03 0.3
  xD float64 0.04 0.4
  xE float64 0.05 0.5
  xF float64 0.06 0.6
  xG float64 0.07 0.7
  xH float64 8.01
  xI float64 9.01
  xJ float64 10.07
  xK float64 11.06
  xL float64 12.06
  xM float64 13.06
  xN float64 14.03

EXEC INIT
EXEC *Xv
TEST
  xA 4
  xB 6
  xC 10
  xD 12
  xE 14
  xF 16
  xG 20
  xH 22
  xI 13
  xJ 16
  xK 21
  xL 24
  xM 17
  xN 20

EXEC INIT
EXEC *XvF32
TEST
  xA float32 0.01 0.1  10.0  100.0
  xB float32 0.02 0.2  20.0  200.0
  xC float32 0.03 0.3  30.0  300.0
  xD float32 0.04 0.4  40.0  400.0
  xE float32 0.05 0.5  50.0  500.0
  xF float32 0.06 0.6  60.0  600.0
  xG float32 0.07 0.7  70.0  700.0
  xH float32+ 8.01
  xI float32+ 9.02
  xJ float32+ 10.05
  xK float32+ 11.03
  xL float32+ 12.04
  xM float32+ 13.05
  xN float32+ 14.03

EXEC INIT
EXEC *XvF64
TEST
  xA float64 0.01 0.1
  xB float64 0.02 0.2
  xC float64 0.03 0.3
  xD float64 0.04 0.4
  xE float64 0.05 0.5
  xF float64 0.06 0.6
  xG float64 0.07 0.7
  xH  8.01
  xI  9.02
  xJ  10.05
  xK  11.03
  xL  12.04
  xM  13.05
  xN  14.03





